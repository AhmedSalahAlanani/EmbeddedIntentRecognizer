

/**

\mainpage Embedded Intent Recognizer

* **EmbeddedIntentRecognizer** is a small intent recognition application, where it recognizes the intent of the language. It currently supports CLI in English language for some use cases. However, it was built in a maintainable and flexible way to be extended for supporting multiple languages, input devices, and output devices as well.

## Table of Contents
- [Embedded Intent Recognizer](#embedded-intent-recognizer)
  - [Table of Contents](#table-of-contents)
  - [Getting Started](#getting-started)
  - [Requirements](#requirements)
  - [Project Structure](#project-structure)
  - [Installation](#installation)
    - [Install Dependencies](#install-dependencies)
  - [Building](#building)
  - [Example Use Cases](#example-use-cases)
  - [Configuration Files](#configuration-files)
  - [Documentation](#documentation)
  - [Testing](#testing)
  - [DataSet](#dataset)

## Getting Started
To start with **EmbeddedIntentRecognizer**, clone the repo:
```
$ git clone https://github.com/AhmedSalahAlanani/EmbeddedIntentRecognizer.git
```
## Requirements
**EmbeddedIntentRecognizer** project is *CMake* based, so you will need a new CMake version (version >= 3.16). You will also need bash shell, so if you're on Windows you can use the `Git Bash` shell that comes with Git to run the upcoming commands.

## Project Structure
```
.
├── config                                   # it contains the input configuration to the Application
├── data                                     # it contains the different dataSets for the Intent Recognition Models after training
├── docs                                     # it generates the html Doxygen documentation
├── src                                      # the main source folder for the project
│   ├── common                               # it contains the common files that can be used by several modules
│   ├── concrete-input-language-strategies   # it contains the different input language strategies supported
│   ├── concrete-input-strategies            # it contains the different input strategies supported
│   ├── concrete-output-language-strategies  # it contains the different output language strategies supported
│   ├── intent-recognition-models            # it contains the different intent recognition models that can be used
│   ├── interfaces                           # it contains the interface classes
│   ├── output-devices                       # it contains the different output devices supported
│   ├── rapidjson                            # rapidjson library for parsing JSON files
|   |── CMakeLists.txt
|   |── ConfigManager.cpp
|   |── ConfigManager.hpp
|   |── CMakEmbeddedIntentRecognizer.cpp
|   |── CMakEmbeddedIntentRecognizer.hpp
|   |── InputStrategyContext.cpp
|   |── InputStrategyContext.hpp
|   |── main.cpp                             # project main file
|   |── TextProcessor.cpp
│   └── TextProcessor.hpp
├── tests                                    # it contains the unit tests for the source code
|── build.sh
|── CMakeLists.txt
└── README.md
```

## Installation
### Install Dependencies
The `IntentRecognizer` application has no dependency. To install the Doxygen dependencies, please run the following command in the terminal
```
$ sudo apt-get update
$ sudo apt-get install -y doxygen graphviz
```


## Building
To build the Run the build script in bash:
```
$ ./build.sh
```

Alternatively, you can run the following command in bash:
```
$ mkdir build && cd build && cmake .. && make
```

The configuration via *CMake* can be influenced further by the following options:

* `-DUILD_TESTS=OFF`

  It disables the build of unit tests as it's enabled by default. This could be useful to minimize the build time of the project.

* `-DBUILD_DOCS=OFF`

  It disables the generation of Doxygen html documentation as it's enabled by default. This could be useful to minimize the build time of the project, also in case one or more of Doxygen dependencies is missing.

## Example Use Cases
Run the application binary and wait for the initialization as follows:
```
$ cd build/src
$ ./intent-recognizer
```
After that type in the command line any of the following:

* * What is the weather like today? => Prints (Intent: Get Weather)
* * What is the weather like in Paris today? => Prints (Intent: Get Weather City)
* * Tell me an interesting fact. => Prints (Intent: Get Fact)
* * wHaT iS tHe wEaThEr lIkE tOdAy? => Prints (Intent: Get Weather)
* * wHaT iS tHe wEaThEr lIkE tOdAy? => Prints (Intent: Get Weather)
* * teLL mE An InTeReStiNg FaCt. => Prints (Intent: Get Fact)
* * What is the     weather     like    today    ? => Prints (Intent: Get Weather)
* * What is the     weather     like      in     Paris    today   ? => Prints (Intent: Get Weather)
* * Tell me     an     interesting       fact    . => Prints (Intent: Get Fact)
* * Get me the weather for today => Prints (Intent: Get Weather)
* * Show me the weather for today => Prints (Intent: Get Weather)
* * Search for the weather for today => Prints (Intent: Get Weather)
* * find if there is rain this afternoon => Prints (Intent: Get Weather)
* * what is the temperature here? => Prints (Intent: Get Weather)
* * what was the wind speed this morning? => Prints (Intent: Get Weather)
* * Show me the city => Prints (Intent: Get City)
* * Show me this city => Prints (Intent: Get City)
* * Show me Berlin => Prints (Intent: Get City)
* * Show me Sofia => Prints (Intent: Get City)
* * Show me Paris => Prints (Intent: Get City)
* * tell me a fun fact. => Prints (Intent: Get Fact)
* * show me something I know nothing about. => Prints (Intent: Get Fact)
* * tell me a fact I didn't know. => Prints (Intent: Get Fact)
* * tell me a fact that's new to me. => Prints (Intent: Get Fact)

To exit, as instructed in the prompt, you can use:
```
Quit
```
or
```
Exit
```

## Configuration Files
**EmbeddedIntentRecognizer** comes with the reference configuration file in JSON format that is read at startup.

* To enable **Deutsch** language support instead of **English** language support currently used, change the  `Language Support` entry as follows:
```
"Language Support" : "Deutsch"
```

* To enable **Touch Screen** input support instead of **CLI** input support currently used, change the  `Input Device` entry as follows:
```
"Input Device" : "Touch Screen"
```
* To enable **Voice Input** input support instead of **CLI** input support currently used, change the  `Input Device` entry as follows:
```
"Input Device" : "Voice Input"
```

* To add **Touch Screen** output support in addition to **CLI** output support currently used, add to the  `Output Devices` array as follows:
```
"Output Devices" : ["CLI", "Touch Screen"]
```

* To add **Voice Output** output support in addition to **CLI**  and **Touch Screen** output support, add to the  `Output Devices` array as follows:
```
"Output Devices" : ["CLI", "Touch Screen", "Voice Output"]
```

## Documentation
The source code is documented with Doxygen formatted comments, the Doxygen generated documentation in **html** format shall be found under the binaries directory after the build finished successfully.

## Testing
* **EmbeddedIntentRecognizer** comes with unit tests that can be run after building. The tests are executed using:
```
$ cd build/tests
$ ./intent-recognizer-unit-tests
```

## DataSet
* **EmbeddedIntentRecognizer** comes with different dataSets for the currently implemented simple Model. It can be found under: `data`

*/